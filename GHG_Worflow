## GHG analysis workflow
# 5Rivers data
# all these analyses have been run for data collected through 6-1-2014 
# step 1 load GC sample analysis sheets into a single df
# step 2 load calibration coefficiences to df
# step 3 add calibration coefs to GC sample df
# step 4 load Sample log
# step 5 connect to field data base and make df
# step 5.1 clean up field data and subset for appropriate samples
# 
# step 6 link sample gas conc to field data via sample log
# step 7 convert sample conc. to ppmm using air temp and chamber headspace
# step 8 regress ppmv against sample time to determine flux
# step 9 use flux in analysis
####################################################################
rm(list=ls(all=TRUE))
######################### GC data
library(plyr)
### need to import GC results files for individual sampling dates
setwd("D:/Dropbox/5R USDA project/5-R Database/gc data")
lftxt = list.files(pattern = "*.txt", full.names = FALSE, recursive = F, include.dirs = T)
lf <- lftxt[-grep("Copy",lftxt)] ## needed to remove standard curve data due to 3 extra columns of standards
lf <- lf[-grep("std",lf)]
lf <- lf[-grep("csv",lf)]
#lf <- lf[-124] ## duplicate  --- make sure to only run once
rgc <- NULL;
for (i in 1:length(lf)){
  dat1 = read.delim(lf[i], header=T, sep = "\t")
  colnames(dat1) <- c("AnalysisDate","Vial", "AcquireDate", "SampleName", "Compound1", "CH4RT","CH4Area","CH4Height","CH4Qt","Compound2","CO2RT","CO2Area","CO2Height","CO2Qt","Compound3","N2ORT","N2OArea","N2OHeight","N2OQt","Int","FileName")
  dat1$AnalStartDate<-as.Date(dat1$AcquireDate[1], "%d-%b-%y, %H:%M:%S"); dat1$file <- as.character(lf[i]) ; dat1$uid <- paste(dat1$AnalStartDate,dat1$SampleName); dat1$fileno <- i
  rgc<-rbind(rgc,dat1); print(summary(duplicated(rgc$uid)))
}
#### need to check for non integrated chromatographs
rgc <- rgc[rgc$N2OArea!=0,]; rgc <- rgc[rgc$CO2Area!=0,]; 
rgc <- rgc[!duplicated(rgc$uid),]
library(stringr)
rgc$SampleName <-str_replace_all(rgc$SampleName, "U1J13", "U1J1V3")
rgc$SampleName <-str_replace_all(rgc$SampleName, "T5J33", "T5J3V3")
rgc$SampleName <-str_replace_all(rgc$SampleName, "T5J13", "T5J1V3")
rgc$SampleName <- str_replace_all(rgc$SampleName,"[t]", "T")
rgc$uid <- paste(rgc$AnalStartDate,rgc$SampleName)
###########################
#step 2
cal <- read.table("D:\\Dropbox\\5R USDA project\\5-R Database\\results stdcurves\\rangesdf2.csv",header=T,sep=",",stringsAsFactors=F)
#cals <- read.csv("D:/Dropbox/5R USDA project/5-R Database/5RiversGHG/std curves/rangesdf.csv", header=T, sep=",")
cal$AnalStartDate <-as.Date(cal$AnalStartDate,"%m/%d/%Y", origin = "1900-01-01") 
cal[cal$AnalStartDate==as.Date(cal$AnalStartDate[duplicated(cal$AnalStartDate)])[1],] ### choose best std curve for each date ### first one is fully duplicated
cal[cal$AnalStartDate==as.Date(cal$AnalStartDate[duplicated(cal$AnalStartDate)])[2],] ### choose best std curve for each date ### second one is fully duplicated
cal <- cal[!duplicated(cal$AnalStartDate),]
##################
# step 3 ########
#gc <- merge(rgc,cal,by="AnalStartDate")
#rm(cal,rgc)
#### step 4 ########
stable7<-read.delim("D:/dropbox/5r usda project/5-R Database/5Rivers-Gas field sampling data 6-1-14.txt", header=T, sep=",")##  
stable7$depthtosoilout <- rowMeans(stable7[,12:15], na.rm=T)
stable7$depthtowaterout <- rowMeans(stable7[,16:19], na.rm=T)
stable7$depthtosoilin <- rowMeans(stable7[,20:23], na.rm=T)
stable7$depthtowaterin <- rowMeans(stable7[,24:27], na.rm=T)
stable7$headspaceht_cmout <- stable7$depthtosoilout-ifelse(is.na(stable7$depthtowaterout),0,stable7$depthtowaterout) ## need to check on height adjustment
stable7$headspaceht_cmin <- stable7$depthtosoilin-ifelse(is.na(stable7$depthtowaterin),0,stable7$depthtowaterin)  ## need to check on height adjustment
stable7$headspaceht_cm <- ifelse(is.na(stable7$headspaceht_cmin)|stable7$headspaceht_cmin==0, stable7$headspaceht_cmout,stable7$headspaceht_cmin)
stable7$waterdepth_cm <- as.numeric(stable7$depthtosoilin-stable7$headspaceht_cm)
stable7$CollectionDate <- as.Date(stable7[,3], "%m/%d/%Y")  # convert Date to a date
stable7$Transect <- as.character(stable7$Transect)
stable7$Transect[stable7$Transect=="1"] <- "T1" ; stable7$Transect[stable7$Transect=="2"] <- "T2" 
stable7$Transect[stable7$Transect=="3"] <- "T3" ; stable7$Transect[stable7$Transect=="4"] <- "T4"
stable7$Transect[stable7$Transect=="5"] <- "T5" ; stable7$Transect[stable7$Transect=="6"] <- "T6"
stable7$Location <- as.character(stable7$Location)
stable7$Location[stable7$Location=="1"] <- "L1" ; stable7$Location[stable7$Location=="2"] <- "L2" 
stable7$Location[stable7$Location=="3"] <- "L3" ; stable7$Location[stable7$Location=="4"] <- "L4" 
stable7$Location[stable7$Location=="5"] <- "L5" ; stable7$Location[stable7$Location=="6"] <- "L6" 
stable7$Location[stable7$Location=="7"] <- "L7" ; stable7$Location[stable7$Location=="8"] <- "L8" 
stable7$uid<-paste(as.character(stable7$CollectionDate),stable7$Transect,stable7$Location, sep=" ")
dat1 <- stable7[!duplicated(stable7$uid),]
saveRDS(dat1,file="c:/users/terry/dropbox/5R USDA project/Data Processing/2012-2015 GHG metadata.rds")
library(reshape2)
field <- melt(dat1, measure.vars=c("sample.time.1","sample.time.2","sample.time.3","sample.time.4"))
field$Vial <- paste("V",substr(field$variable,13,13),sep=""); field$value <- sub("12/30/1899 ","",field$value)
field$SampleTime <- as.POSIXct(strptime(field$value,format='%H:%M:%S'))
field$uid <- paste(field$CollectionDate," ",field$Transect,field$Location,field$Vial,sep="")
#rm(stable7,dat1)
#####################################
#### step 4 ##########
log <- read.table("D:\\Dropbox\\UNL Aquatic Ecology Lab\\Instrument Folders\\GC Log In\\gc log\\GC run sheet filled out check 9-19-14.txt",header=T,sep="\t")
colnames(log) <- c(names(log)[1:4],"CollectionDate",names(log)[6],"AnalysisDate","stdcurvedate")
log$AnalysisDate <-as.Date(log$AnalysisDate,"%m/%d/%Y", origin = "1900-01-01") 
######################################
############ step 5 ###############
rgc$CollectionDate <- as.Date(log[match(rgc$AnalStartDate,log$AnalysisDate),"CollectionDate"],"%m/%d/%Y", origin = "1900-01-01")
rgc$calDate <- as.Date(log[match(rgc$AnalStartDate,log$AnalysisDate),"stdcurvedate"],"%m/%d/%Y", origin = "1900-01-01")
gc <- merge(rgc,cal,by.x="calDate",by.y="AnalStartDate")
###### edit samples collected on two different dates but same analysis date #######
gc$CollectionDate[gc$uid=="2013-10-17 U3J1V1"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 U3J2V1"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 U4J1V1"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 U4J2V1"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 S3J1V1"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 S3J2V1"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 T5J1V1"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 T5J2V1"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 T5J3V1"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 U2J1V1"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 U2J2V1"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 U1J1V1"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 U1J2V1"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T1J1V1"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T1J2V1"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T2J1V1"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T2J2V1"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T2J3V1"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 S1J1V1"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 S1J2V1"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 S2J1V1"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 S2J2V1"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T4J2V1"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T4J3V1"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T3J1V1"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T3J2V1"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T3J3V1"] <-"2013-9-5"

gc$CollectionDate[gc$uid=="2013-10-17 U3J1V2"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 U3J2V2"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 U4J1V2"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 U4J2V2"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 S3J1V2"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 S3J2V2"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 T5J1V2"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 T5J2V2"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 T5J3V2"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 U2J1V2"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 U2J2V2"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 U1J1V2"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 U1J2V2"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T1J1V2"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T1J2V2"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T2J1V2"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T2J2V2"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T2J3V2"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 S1J1V2"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 S1J2V2"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 S2J1V2"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 S2J2V2"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T4J2V2"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T4J3V2"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T3J1V2"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T3J2V2"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T3J3V2"] <-"2013-9-5"

gc$CollectionDate[gc$uid=="2013-10-17 U3J1V3"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 U3J2V3"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 U4J1V3"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 U4J2V3"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 S3J1V3"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 S3J2V3"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 T5J1V3"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 T5J2V3"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 T5J3V3"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 U2J1V3"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 U2J2V3"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 U1J1V3"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 U1J2V3"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T1J1V3"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T1J2V3"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T2J1V3"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T2J2V3"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T2J3V3"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 S1J1V3"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 S1J2V3"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 S2J1V3"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 S2J2V3"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T4J2V3"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T4J3V3"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T3J1V3"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T3J2V3"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T3J3V3"] <-"2013-9-5"

gc$CollectionDate[gc$uid=="2013-10-17 U3J1V4"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 U3J2V4"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 U4J1V4"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 U4J2V4"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 S3J1V4"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 S3J2V4"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 T5J1V4"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 T5J2V4"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 T5J3V4"] <-"2013-9-4"
gc$CollectionDate[gc$uid=="2013-10-17 U2J1V4"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 U2J2V4"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 U1J1V4"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 U1J2V4"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T1J1V4"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T1J2V4"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T2J1V4"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T2J2V4"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T2J3V4"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 S1J1V4"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 S1J2V4"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 S2J1V4"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 S2J2V4"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T4J2V4"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T4J3V4"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T3J1V4"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T3J2V4"] <-"2013-9-5"
gc$CollectionDate[gc$uid=="2013-10-17 T3J3V4"] <-"2013-9-5"

gc$uid <- paste(gc$CollectionDate,gc$SampleName)
full <- merge(gc,field,by="uid")

##### searching for missing sampling dates ######

########### step 6 ##########
full$CH4ppmv<- (full$CH4Area-full$CH4alpha)/full$CH4beta
full$CO2ppmv<- (full$CO2Area-full$CO2alpha)/full$CO2beta
full$N2Oppmv<- (full$N2OArea-full$N2Oalpha)/full$N2Obeta

#chamberradius<-.125    ### radius in meters
#chambervol<-3.14159265359*(chamberradius^2)*chamberheight  ### generic chamber volume, unique for each chamber collection date
# note the formula for converting ppmv to mass is a function of headspace volume/headspace area which equals headspace height
molewtN2O<-28;molewtCO2<-12;molewtCH4<-12
Rconstant <- 8.2057338e-2 #L atm K-1 mol-1
cubicM2L <- 1000 # convert m3 to L
full$airtempK <- (full$air.temp+459.67)*(5/9)
full$mgNN2Om2<-full$N2Oppmv/1e6*molewtN2O*1/Rconstant*(full$headspaceht_cm/100)*cubicM2L/full$airtempK
full$mgCCO2m2<-full$CO2ppmv/1e6*molewtCO2*1/Rconstant*(full$headspaceht_cm/100)*cubicM2L/full$airtempK
full$mgCCH4m2<-full$CH4ppmv/1e6*molewtCH4*1/Rconstant*(full$headspaceht_cm/100)*cubicM2L/full$airtempK
full$usample <- paste(full$CollectionDate.x," ",full$Transect,full$Location,sep="")



## step 6 calculate rates ########
full <- full[!full$uid=="2012-07-07 T1J1V2",]
full <- full[!full$uid=="2012-07-07 T3J3V4",]
full <- full[!full$uid=="2012-07-07 T4J1V2",]
full <- full[!full$uid=="2012-07-20 S3J2V2",]
full <- full[!full$uid=="2012-07-20 T3J2V4",]
full <- full[!full$uid=="2012-07-07 T4J2V4",]
full <- full[!full$uid=="2012-07-07 U4J1V4",]
full <- full[!full$uid=="2012-08-10 U2J2V4",]
full <- full[!full$uid=="2012-08-10 T4J1V4",]
full <- full[!full$uid=="2012-08-12 T5J3V1",]
full <- full[!full$uid=="2012-08-17 S2J1V4",]
full <- full[!full$uid=="2012-08-17 U3J2V4",]
full <- full[!full$uid=="2012-08-17 U3J2V4",]
full <- full[!full$uid=="2012-09-06 T3J1V4",]
full <- full[!full$uid=="2012-09-20 S2J1V3",]
full <- full[!full$uid=="2012-09-20 S2J2V3",]
full <- full[!full$uid=="2012-09-20 T1J1V3",]
full <- full[!full$uid=="2012-09-20 T4J1V3",]
full <- full[!full$uid=="2012-09-20 U4J1V2",]
full <- full[!full$uid=="2012-09-26 T5J3V2",]
full <- full[!full$uid=="2012-10-10 S2J2V1",]
full <- full[!full$uid=="2012-10-23 S2J2V1",]
full <- full[!full$uid=="2012-10-23 T5J2V1",]
full <- full[!full$uid=="2012-11-09 T1J1V4",]
full <- full[!full$uid=="2012-10-23 U4J1V4",]
full <- full[!full$uid=="2012-10-23 T5J2V1",]
full <- full[!full$uid=="2012-12-19 T5J3V4",]
full <- full[!full$uid=="2012-12-19 U4J1V4",]
full <- full[!full$uid=="2013-01-03 U3J1V4",]
full <- full[!full$uid=="2013-01-11 T1J2V1",]
full <- full[!full$uid=="2013-01-17 T1J1V3",]
full <- full[!full$uid=="2013-01-17 T1J2V4",]
full <- full[!full$uid=="2013-01-17 U3J2V1",]
full <- full[!full$uid=="2013-02-07 S1J1V2",]
full <- full[!full$uid=="2013-02-07 T4J2V4",]
full <- full[!full$uid=="2013-02-14 S3J1V4",]
full <- full[!full$uid=="2013-02-14 T4J1V4",]
full <- full[!full$uid=="2013-03-09 U1J1V3",]
full <- full[!full$uid=="2013-02-14 T4J1V4",]
full <- full[!full$uid=="2013-03-22 T3J3V1",]
full <- full[!full$uid=="2013-03-22 U3J2V1",]
full <- full[!full$uid=="2013-04-09 T4J3V1",]
full <- full[!full$uid=="2013-04-09 U1J2V1",]
full <- full[!full$uid=="2013-05-14 T4J1V1",]
full <- full[!full$uid=="2013-06-19 T3J1V2",]
full <- full[!full$uid=="2013-06-19 T3J2V2",]
full <- full[!full$uid=="2013-06-19 T3J3V2",]
full <- full[!full$uid=="2013-06-24 S3J1V1",]
full <- full[!full$uid=="2013-07-17 T3J2V1",]
full <- full[!full$uid=="2013-07-17 T3J3V1",]
full <- full[!full$uid=="2013-07-24 U1J1V1",]
full <- full[!full$uid=="2013-07-24 U1J2V4",]
full <- full[!full$uid=="2013-07-24 U4J2V1",]
full <- full[!full$uid=="2013-08-09 S3J3V1",]
full <- full[!full$uid=="2013-08-15 S1J1V1",]
full <- full[!full$uid=="2013-09-10 T2J2V2",]
full <- full[!full$uid=="2013-09-26 U1J2V3",]
full <- full[!full$uid=="2013-10-22 S1J1V2",]
full <- full[!full$uid=="2013-10-22 S1J2V2",]
full <- full[!full$uid=="2013-10-22 T1J1V3",]
full <- full[!full$uid=="2013-10-22 T1J2V3",]
full <- full[!full$uid=="2013-10-22 T2J1V3",]
full <- full[!full$uid=="2013-10-22 T2J2V2",]
full <- full[!full$uid=="2013-10-22 T3J2V2",]
full <- full[!full$uid=="2013-10-22 T3J3V2",]
full <- full[!full$uid=="2013-10-22 T4J2V2",]
full <- full[!full$uid=="2013-10-22 T4J3V2",]
full <- full[!full$uid=="2013-11-01 S2J3V4",]
full <- full[!full$uid=="2013-05-03 T2J2V1",]


## need to add gas flux measurement environmental data to rates df!!!!!!!!!!!!!!!!!!!!!! ################

#################
write.table(full,file="D:/Dropbox/5R USDA project/5-R Database/gc data/checkplots/full df for QAQC.txt",sep="\t",row.names=F)
aa <- NULL
for(i in 1:dim(full)[2]) aa[i] <- unlist(class(full[,i]))[1]
write.table(aa,file="D:/Dropbox/5R USDA project/5-R Database/gc data/checkplots/full df for QAQC classes.txt",sep=",")

FitN2O<- NULL; FitCO2<- NULL; FitCH4<- NULL; waterdepth <- NULL
rsqN2O<-NULL; rsqCO2<-NULL; rsqCH4<-NULL; airtemp <- NULL; soiltemp <- NULL
chamberdate<-unique(full$usample)
setwd("D:/Dropbox/5R USDA project/5-R Database/gc data/checkplots")
par(mfrow=c(3,1),mar=c(4,4,3,2))
for(i in 1:length(chamberdate)){
  FitN2O[i]<-summary(lm(full$mgNN2Om2[full$usample==chamberdate[i]] ~ as.numeric(full$SampleTime[full$usample==chamberdate[i]])))$coefficient[2,1]
  rsqN2O[i]<-summary(lm(full$mgNN2Om2[full$usample==chamberdate[i]] ~ as.numeric(full$SampleTime[full$usample==chamberdate[i]])))$r.squared
  FitCO2[i]<-summary(lm(full$mgCCO2m2[full$usample==chamberdate[i]] ~ as.numeric(full$SampleTime[full$usample==chamberdate[i]])))$coefficient[2,1]
  rsqCO2[i]<-summary(lm(full$mgCCO2m2[full$usample==chamberdate[i]] ~ as.numeric(full$SampleTime[full$usample==chamberdate[i]])))$r.squared
  FitCH4[i]<-summary(lm(full$mgCCH4m2[full$usample==chamberdate[i]] ~ as.numeric(full$SampleTime[full$usample==chamberdate[i]])))$coefficient[2,1]
  rsqCH4[i]<-summary(lm(full$mgCCH4m2[full$usample==chamberdate[i]] ~ as.numeric(full$SampleTime[full$usample==chamberdate[i]])))$r.squared
  waterdepth[i] <- mean(full$waterdepth_cm[full$usample==chamberdate[i]],na.rm=T)
  soiltemp[i] <- mean(full$soil.temp[full$usample==chamberdate[i]],na.rm=T)
  airtemp[i] <- mean(full$air.temp[full$usample==chamberdate[i]],na.rm=T)
  #chamberdate.N2O<-chamberdate[i]; deltaN2O <- 100*(max(full$mgNN2Om2[full$usample==chamberdate[i]])-min(full$mgNN2Om2[full$usample==chamberdate[i]]))
  #deltaCO2 <- max(full$mgCCO2m2[full$usample==chamberdate[i]])-min(full$mgCCO2m2[full$usample==chamberdate[i]])
  #deltaCH4 <- 100*(max(full$mgCCH4m2[full$usample==chamberdate[i]])-min(full$mgCCH4m2[full$usample==chamberdate[i]]))
  #plotname.i<-paste(chamberdate.N2O, ".pdf", sep = "")
  #pdf(plotname.i,width = 90/25.4, height = 90/25.4)
  #par(mfrow=c(3,1),mar=c(3,4,2,1), cex=.5, ps=10,mgp=c(1.5,.5,0))
  
  #title.N2O<-paste(chamberdate.N2O, " r2=", round(rsqN2O[i],3), "  ", round((FitN2O[i]*3600),4), "N2O flux mg m-2 h-1",round(deltaN2O,digit=3), sep =" ")
  #plot(full$mgNN2Om2[full$usample==chamberdate[i]] ~ as.numeric(full$SampleTime[full$usample==chamberdate[i]]), xlab="sec", ylab= "mgN-N2Om2", main =title.N2O)
  #abline(lm(full$mgNN2Om2[full$usample==chamberdate[i]] ~ as.numeric(full$SampleTime[full$usample==chamberdate[i]])), col="red")
  
#  title.CO2<-paste(chamberdate.N2O, " r2=", round(rsqCO2[i],3), "  ", round((FitCO2[i]*3600),4), "CO2 flux mg m-2 h-1",round(deltaCO2, digit=3), sep =" ")
 # plot(full$mgCCO2m2[full$usample==chamberdate[i]] ~ as.numeric(full$SampleTime[full$usample==chamberdate[i]]), xlab="sec", ylab= "mgC-CO2m2", main =title.CO2)
  #abline(lm(full$mgCCO2m2[full$usample==chamberdate[i]] ~ as.numeric(full$SampleTime[full$usample==chamberdate[i]])), col="red")
  
#  title.CH4<-paste(chamberdate.N2O, " r2=", round(rsqCH4[i],3), "  ", round((FitCH4[i]*3600),4), "CH4 flux mg m-2 h-1",round(deltaCH4, digit=3), sep =" ")
 # plot(full$mgCCH4m2[full$usample==chamberdate[i]] ~ as.numeric(full$SampleTime[full$usample==chamberdate[i]]), xlab="sec", ylab= "mgC-CH4m2", main =title.CH4)
  #abline(lm(full$mgCCH4m2[full$usample==chamberdate[i]] ~ as.numeric(full$SampleTime[full$usample==chamberdate[i]])), col="red")
  
  #dev.off()
  #dev.print(file=plotname.i, device=pdf, width=720)
}
unitconvert <- 60*60*24  ##mg m-2 sec-1 to mg m-2 day-1
rates<-data.frame(N2Orate=(FitN2O*unitconvert),N2OR2=rsqN2O,CO2rate=(FitCO2*unitconvert), 
                  CO2R2=rsqCO2,CH4rate=(FitCH4*unitconvert), CH4R2=rsqCH4, chamberdates=chamberdate, 
                  waterdepthcm=waterdepth,soiltemp=soiltemp,airtemp=airtemp)
write.table(rates,"D:/Dropbox/5R USDA project/5-r database/GHG flux rates.txt",sep="\t")

######## step 6.1 QAQC #################
# examine plots for outliers
# run GHG flux QAQC checkplots.rmd to generate QAQC plots for each flux
# then remove suspect samples


rm(list=ls(all=TRUE))
rates <- read.delim("D:/Dropbox/5R USDA project/5-r database/GHG flux rates.txt",sep="\t", header=T)
rates <- rates[!rates$chamberdates=="2012-05-09 T1J1",]
rates <- rates[!rates$chamberdates=="2012-05-09 T4J3",]
rates <- rates[!rates$chamberdates=="2012-05-09 T5J1",]
rates <- rates[!rates$chamberdates=="2012-06-06 S1J1",]
rates <- rates[!rates$chamberdates=="2012-06-06 S2J2",]

rates <- rates[!rates$chamberdates=="2012-06-06 T2J3",]
rates <- rates[!rates$chamberdates=="2012-06-06 T3J1",]
rates <- rates[!rates$chamberdates=="2012-06-06 T4J2",]
rates <- rates[!rates$chamberdates=="2012-06-06 T4J3",]
rates <- rates[!rates$chamberdates=="2012-06-06 U1J1",]
rates <- rates[!rates$chamberdates=="2012-06-06 U1J2",]
rates <- rates[!rates$chamberdates=="2012-06-06 U2J1",]
rates <- rates[!rates$chamberdates=="2012-06-06 U3J2",]
rates <- rates[!rates$chamberdates=="2012-06-06 U4J1",]
rates <- rates[!rates$chamberdates=="2012-06-13 S1J1",]
rates <- rates[!rates$chamberdates=="2012-06-13 T1J1",]
rates <- rates[!rates$chamberdates=="2012-06-13 U2J1",]
rates <- rates[!rates$chamberdates=="2012-06-20 T5J1",]
rates <- rates[!rates$chamberdates=="2012-06-25 U1J2",]
rates <- rates[!rates$chamberdates=="2012-06-25 U2J2",]
rates <- rates[!rates$chamberdates=="2012-06-25 U3J1",]
rates <- rates[!rates$chamberdates=="2012-06-25 U4J1",]
rates <- rates[!rates$chamberdates=="2012-07-07 T1J2",]
rates <- rates[!rates$chamberdates=="2012-07-07 U3J1",]
rates <- rates[!rates$chamberdates=="2012-07-07 T1J2",]
rates <- rates[!rates$chamberdates=="2012-08-17 T3J2",]
rates <- rates[!rates$chamberdates=="2012-11-09 S3J2",]
rates <- rates[!rates$chamberdates=="2013-01-24 T5J2",]
rates <- rates[!rates$chamberdates=="2013-02-07 T3J2",]
rates <- rates[!rates$chamberdates=="2013-02-07 U1J2",]
rates <- rates[!rates$chamberdates=="2013-02-14 S2J1",]
rates <- rates[!rates$chamberdates=="2013-03-09 T4J1",]
rates <- rates[!rates$chamberdates=="2013-03-22 S2J1",]
rates <- rates[!rates$chamberdates=="2013-03-22 S3J1",]
rates <- rates[!rates$chamberdates=="2013-03-22 S3J2",]
rates <- rates[!rates$chamberdates=="2013-04-09 S2J1",]
rates <- rates[!rates$chamberdates=="2013-04-09 S2J2",]
rates <- rates[!rates$chamberdates=="2013-04-09 S3J1",]
rates <- rates[!rates$chamberdates=="2013-04-09 S3J2",]
rates <- rates[!rates$chamberdates=="2013-04-30 S2J1",]
rates <- rates[!rates$chamberdates=="2013-04-30 S3J1",]
rates <- rates[!rates$chamberdates=="2013-05-08 S3J2",]
rates <- rates[!rates$chamberdates=="2012-06-06 S2J1",]
rates <- rates[!rates$chamberdates=="2013-06-11 S2J2",]
rates <- rates[!rates$CH4rate<(-5),]
rates <- rates[!rates$N2Orate<(-.4),]
write.table(rates,"D:/Dropbox/5R USDA project/5-r database/GHG flux rates post QAQC.txt",sep="\t")

####### statistical analyses of flux data 2012-Jun2014 ######
rm(list=ls(all=TRUE))
rates <- read.delim("c:/users/loecke/dropbox/5R USDA project/5-r database/GHG flux rates post QAQC.txt",sep="\t", header=T)


require(stringr)
rates$chamber <- str_sub(rates$chamberdates,-4,-1)
zones <- c("Upland","Transition","Upland","Transition","Upland","Transition","Upland","Transition","Transition",
           "Transition","Transition","Transition","Upland","Transition","Upland","Upland","Upland","Transition",
           "Upland","Transition","Transition","Upland","Upland","Upland","Subold","Subold","Subnew","Subnew","Subold","Subold","Subnew","Subnew",rep("crop",5))
Transect <- c("S1","S1","T1","T1","T2","T2","T2","T3","T3","T3","T4","T4","T4","T5","T5","T5","U4","U4","U3","U3","U2","U2","U1","U1",
              "S2","S2","S2","S2","S3","S3","S3","S3",rep("T5",5))
Location <- c("J1","J2","J1","J2","J1","J2","J3","J1","J2","J3","J1","J2","J3","J1","J2","J3","J1","J2","J1","J2","J1","J2","J1","J2",
              "J1","J2","J3","J4","J1","J2","J3","J4","L1","L2","L3","L4","L5")
chamber <- as.character(paste(Transect,Location,sep="_"))

habitatchamber <- data.frame(chamber=chamber,habitat=zones)
rates$habitat <- habitatchamber[match(rates$chamber,habitatchamber$chamber),"habitat"]
  #as.factor(c(rep("transition",16),rep("upland",8),rep("submerged",4), rep("submerged_new",4)))
rates$CollectionDate <- as.Date(str_sub(rates$chamberdates,1,10))
rates$baci <- ifelse(rates$CollectionDate>"2012-05-01","after","before")
rates <- rates[order(rates$CollectionDate),]
plot(CH4rate~CollectionDate,data=rates[rates$CH4R2>.87,])
for(i in 1:length(unique(rates$chamber))) lines(CH4rate~CollectionDate,data=rates[rates$CH4R2>.87&rates$chamber==unique(rates$chamber)[i],])
testss <- aggregate(CH4rate~CollectionDate+chamber+habitat,data=rates, cumsum)
maxch4cum <- which.max(testss$chamber) ## need to find the chamber which has the max cumsum to set the scale on the following graph
plot(cumsum(CH4rate)~CollectionDate,data=rates[rates$CH4R2>.87,])
for(i in 1:length(unique(rates$chamber))) lines(cumsum(CH4rate)~CollectionDate,data=rates[rates$CH4R2>.87&rates$chamber==unique(rates$chamber)[i],])
##############
## summarize to plot by habitat
hist(rates$N2Orate)
plot(N2Orate~CollectionDate,data=rates)

plot(CH4rate~CollectionDate,data=rates[rates$CH4R2>.87,])
rates$dox <- as.numeric(rates$CollectionDate-min(rates$CollectionDate))
summary(lmer(log(CH4rate+1-min(rates$CH4rate[rates$CH4R2>.87],na.rm=T))~ habitat +(1|chamber),data=rates[rates$CH4R2>.87,]))
summary(lm(CH4rate~habitat-1,data=rates[rates$CH4R2>.87,]))

hist(rates$CH4rate)
plot(CH4rate~CollectionDate,data=rates)
summary(lm(CH4rate~habitat-1,data=rates))

fluxhabitat <- aggregate(N2Orate~habitat,data=rates,mean)

#############
require(pracma)
N2Ointeg <- NULL;CO2integ <- NULL;CH4integ <- NULL;days <- NULL
windows(12,10,record=T)
par(mfrow=c(3,1), mar=c(4, 5, 3, 2), lwd=1.5)
for(i in 1:length(unique(rates$chamber))){
  N2Ointeg[i] <- trapz(as.numeric(rates$CollectionDate[rates$chamber==unique(rates$chamber)[i]]),rates$N2Orate[rates$chamber==unique(rates$chamber)[i]])
  days[i] <- max(as.numeric(rates$CollectionDate[rates$chamber==unique(rates$chamber)[i]]))-min(as.numeric(rates$CollectionDate[rates$chamber==unique(rates$chamber)[i]]))
  plot(N2Orate~CollectionDate,data=rates[rates$chamber==unique(rates$chamber)[i],],
       ylab = expression(paste("N"[2],"O flux (mgN m"^"-2", "d"^"-1",")")),main=unique(rates$chamber)[i])
  d <- approx(as.numeric(rates$CollectionDate[rates$chamber==unique(rates$chamber)[i]]),rates$N2Orate[rates$chamber==unique(rates$chamber)[i]],n=days[i]+1)
  plot(d$x,cumsum(d$y))
  CH4integ[i] <- trapz(as.numeric(rates$CollectionDate[rates$chamber==unique(rates$chamber)[i]]),rates$CH4rate[rates$chamber==unique(rates$chamber)[i]])
  
  plot(CH4rate~CollectionDate,data=rates[rates$chamber==unique(rates$chamber)[i],],
       ylab = expression(paste("CH"[4]," flux (mgC m"^"-2", "d"^"-1",")")))
  CO2integ[i] <- trapz(as.numeric(rates$CollectionDate[rates$chamber==unique(rates$chamber)[i]]),rates$CO2rate[rates$chamber==unique(rates$chamber)[i]])
  #plot(CO2rate~CollectionDate,data=rates[rates$chamber==unique(rates$chamber)[i],],
   #    ylab = expression(paste("CO"[2]," flux (mgC m"^"-2", "d"^"-1",")")))
}


###############
### display before and after time series and overall boxplot
overall<-data.frame(N2Ointeg,CH4integ, CO2integ,chamber=unique(rates$chamber),chamber=unique(rates$habitat),samplinglength_days=days)
overall$chamberhabitat <- as.factor(c(rep("transition",16),rep("upland",8),rep("submerged",4), rep("submerged_new",4)))

boxplot((overall$N2Ointeg[overall$chamberhabitat!="submerged_new"]/overall$samplinglength_days[overall$chamberhabitat!="submerged_new"])~
          overall$chamberhabitat[overall$chamberhabitat!="submerged_new"], 
         ylab=expression(paste("N"[2],"O flux (mgN m"^"-2", "d"^"-1",")")))
############## without new transparent submerged  chambers
overall2 <- overall[!overall$chamberhabitat=="submerged_new",]; overall2$chamberhabitat <- factor(overall2$chamberhabitat)

boxplot((overall2$N2Ointeg/overall2$samplinglength_days)~
          overall2$chamberhabitat, ylab=expression(paste("N"[2],"O flux (mgN m"^"-2", "d"^"-1",")")))
boxplot((overall2$CH4integ/overall2$samplinglength_days)~
          overall2$chamberhabitat, ylab=expression(paste("CH"[4]," flux (mgC m"^"-2", "d"^"-1",")")))

################# add in pre-construction n2o fluxes
preC <- read.table("Dropbox\\Research\\Other's\\James Detraz/james field data final.txt", skip=1,header=T, sep="\t")
preC$CollectionDate2 <- as.Date(preC$CollectionDate, "%m/%d/%y", origin = "1900-01-01")
preC$chamber <- paste(preC$Transect,preC$Location)
preC$site <- as.factor(ifelse(preC$Transect>4,"aux","main"))
boxplot(preC[preC$site=="main",31]~preC$chamber[preC$site=="main"])
boxplot(preC[preC$site=="main",31]~preC$Transect[preC$site=="main"])
library("lme4", lib.loc="C:/Program Files/R/R-3.0.1/library")
summary(lmer(N2Oflux_mgNm2hr~factor(Transect)-1+(1|chamber), data=preC[preC$site=="main",]))
convertunits <- 24 # mgNm2hr to mgNm2d
preC2 <- preC[!is.na(preC$N2Oflux_mgNm2hr),]
preC2$N2Oflux <- preC2$N2Oflux_mgNm2hr*convertunits
require(pracma)
N2Ointeg <- NULL;CO2integ <- NULL;days <- NULL
windows(12,10,record=T)
par(mfrow=c(3,1), mar=c(4, 5, 3, 2), lwd=1.5)
for(i in 1:length(unique(preC2$chamber))){
  N2Ointeg[i] <- trapz(as.numeric(preC2$CollectionDate2[preC2$chamber==unique(preC2$chamber)[i]]),
                       preC2$N2Oflux[preC2$chamber==unique(preC2$chamber)[i]])
  days[i] <- max(as.numeric(preC2$CollectionDate2[preC2$chamber==unique(preC2$chamber)[i]]))-min(as.numeric(preC2$CollectionDate2[preC2$chamber==unique(preC2$chamber)[i]]))
  plot(N2Oflux~CollectionDate2,data=preC2[preC2$chamber==unique(preC2$chamber)[i],],
       ylab = expression(paste("N"[2],"O flux (mgN m"^"-2", "d"^"-1",")")),main=unique(preC2$chamber)[i])
  }
prepostflux <- data.frame(chamber=c(preC2$chamber,rates$chamber),N2Of=c(preC2$N2Oflux, rates$N2Orate),
                          CH4f=c(rep(NA,length(preC2$N2Oflux)),rates$CH4rate),
                          CO2f=c(rep(NA,length(preC2$N2Oflux)),rates$CO2rate),
                          date=as.Date(c(preC2$CollectionDate2,rates$CollectionDate)),
                          prepostconstruction=c(rep("pre",length(preC2$N2Oflux)),rep("post",length(rates$CollectionDate))))
write.csv(prepostflux, file="dropbox/5R USDA project/Data Processing/5R GHG prepostconstruction 2010-2013.csv",row.names=FALSE)
mn2o <- aggregate(N2Of~date,data=prepostflux, mean)
mn2o$N2Of <- mn2o$N2Of
mn2o$medflux <- aggregate(N2Of~date,data=prepostflux, median)[,2]
mn2o$sdflux <- aggregate(N2Of~date,data=prepostflux, sd)[,2]

windows(10,7,record=T)
par(mfrow=c(1,1), mar=c(5, 5, 4, 2), lwd=1.5, mgp=c(2.5,.8,0),ps=24, las=1)
plot(mn2o$N2Of~mn2o$date, ylab = expression(paste("N"[2],"O flux (mgN m"^"-2", "d"^"-1",")")),
     xlab="Sampling Date")#, ylim=c(-1.8,9.0))
arrows(x0=mn2o$date,y0=mn2o$N2Of,x1=mn2o$date,y1=mn2o$N2Of-(mn2o$sdflux/5), length=.04,angle=90)
arrows(x0=mn2o$date,y0=mn2o$N2Of,x1=mn2o$date,y1=mn2o$N2Of+(mn2o$sdflux/5), length=.04,angle=90)
abline(h=mean(mn2o$N2Of))
text(2013,4,"tt")
# 200 kg ha-1 * 1% * *.1 kg ha to g m2

########### add sample time 1 to rates from dat1 to match rates data with sensor data ####
#load stable access data from field collection, then convert to dat1
dat1 <- readRDS(file="d:/dropbox/5R USDA project/Data Processing/2012-2015 GHG metadata.rds")
#make uid in rates to match uid in dat1
rates$uid <- paste(rates$CollectionDate,substr(rates$chamber,1,2),substr(rates$chamber,3,4))
#match uid in rates to uid in dat1 to add sample.time.1 to rates

dat1$time1 <- substr(as.character(dat1$sample.time.1),12,19)
rates$starttime <- dat1[match(rates$uid,dat1$uid),"time1"]

#convert char of sample.time.1 to POSIXct
rates$CollectionTime <- as.POSIXct(paste(rates$CollectionDate,rates$starttime),format="%Y-%m-%d %H:%M:%S")
# save copy of rates to rds
saveRDS(rates,file="c:/users/terry/dropbox/5R USDA project/Data Processing/2012-2015 GHG flux rates.rds")
#### match sensor data to flux data ####

sensdat <- read.csv("nsf soil o2 new/project planning/Simonetta data/complete sensor dataframe post visual QA.csv", header=T, stringsAsFactors = F)
sensdat2 <- sensdat[,4:87]
sensdat2$DateTime <- as.POSIXct(sensdat2$DateTime)
saveRDS(sensdat2,
        file="c:/users/terry/dropbox/5R USDA project/data processing/2012-2014 complete sensor dataframe post visual QA.rds")

##### pre&post construction GHG and sensor data #####
rm(list=ls(all=TRUE))
sen1 <- readRDS("c:/users/terry/dropbox/5R USDA project/data processing/2012-2014 complete sensor dataframe post visual QA.rds")
dat1 <- readRDS(file="d:/dropbox/5R USDA project/Data Processing/2012-2015 GHG flux rates.rds")
# need link between chamber names in dat1 and sensor names in sen1
labtable <- read.csv("c:/users/terry/dropbox/nsf soil o2 new/project planning/Simonetta data/complete sensor labels.csv", header=T, stringsAsFactors = F)
saveRDS(labtable, 
file="c:/users/terry/dropbox/nsf soil o2 new/project planning/Simonetta data/complete sensor labels.rds")
labtable <- readRDS(file="c:/users/terry/dropbox/nsf soil o2 new/project planning/Simonetta data/complete sensor labels.rds")
dat <- read.table("c:/users/terry/dropbox/5R USDA project/spatial data/post-construction chamber locations.txt",header=T,sep="\t")
labtable$lat <- dat[match(labtable$chamber,dat$chamber),"lat"]
labtable$lon <- dat[match(labtable$chamber,dat$chamber),"lon"]
dat2 <- merge(dat1,labtable,by="chamber")
dat2$roundtime <- round.POSIXt(dat2$CollectionTime, units="hours")

moistdd <- matrix(data=NA,nrow=length(dat2$chamber), ncol=336)
for(i in 1:length(dat2$N2Orate)){
  d <- sen1[sen1$DateTime>(dat2$roundtime[i]-704800) & sen1$DateTime<=dat2$roundtime[i],dat2$Moist[i]]
  moistdd[i,] <- d[57:392]
  d <- NULL
}

tempdd <- matrix(data=NA,nrow=length(dat2$chamber), ncol=336)
for(i in 1:length(dat2$N2Orate)){
  d <- sen1[sen1$DateTime>(dat2$roundtime[i]-704800) & sen1$DateTime<=dat2$roundtime[i],dat2$temp[i]]
  tempdd[i,] <- d[57:392]
  d <- NULL
}

o2dd <- matrix(data=NA,nrow=length(dat2$chamber), ncol=336)
for(i in 1:length(dat2$N2Orate)){
  d <- sen1[sen1$DateTime>(dat2$roundtime[i]-704800) & sen1$DateTime<=dat2$roundtime[i],dat2$O2[i]]
  o2dd[i,] <- d[57:392]
  d <- NULL
}
# calculate quantiles to determine pore space from soil moisture sensors
qv <- NULL
for(i in 58:81) qv[i-57] <- as.numeric(quantile(sen1[,i],.99,na.rm=T))
qvdat <- data.frame(sensor=names(sen1[,58:81]),ps=qv)
qvdat$chamber <- labtable[match(qvdat$sensor,labtable$Moist),"chamber"]
dat2$ps <- qvdat[match(dat2$chamber,qvdat$chamber),"ps"]
windows(30,30,record=T)
par(mfrow=c(5,5), mar=c(1,1,1,1))
for(i in 1:24){
plot(sen1[,i+57]~sen1$DateTime)
abline(h=qvdat$ps[i])
}

##### use RF to detect patterns among fluxes and moist, temp, and O2 #####
#install.packages("randomForest")
library(randomForest)
## combine sensor data with flux data
# make labels for sensor timeseries
timehours <- seq(0,167.5, by=.5)
moistlabs <- paste("M",timehours,sep="_"); 
templabs <- paste("T",timehours,sep="_")
o2labs <- paste("O",timehours,sep="_")
cdat <- cbind(dat2,moistdd, tempdd, o2dd) #####################################
colnames(cdat) <- c(names(dat2),moistlabs,templabs,o2labs)

fmla1 <- paste(names(cdat[,seq(28,1035,1)]), collapse= "+")
formularf <- as.formula(paste("N2Orate ~ ", fmla1,collapse=""))

set.seed(131)
N2O.rf <- randomForest(formularf, data=cdat, mtry=300,
                         importance=TRUE, na.action=na.omit,ntree=1000)
print(N2O.rf)
f <- data.frame(importance(N2O.rf))
ff <- f[order(f$X.IncMSE, decreasing = T),]
head(ff,30)
rownames(ff)
runuptime=as.numeric(sapply(strsplit(rownames(ff),"_"), "[", 2))
parm <- as.character(sapply(strsplit(rownames(ff),"_"), "[", 1))
fff <- data.frame(ff,runuptime=runuptime,parm=parm)
fff$rundowntime <- fff$runuptime-167.5
# plot importance vs time to flux measurement
windows(20,20,record = T)
par(mfrow=c(3,1),mar=c(0,4,0,2),cex=1,mgp=c(.75,.18,0), las=1, 
    ps=8,tck=-.01, fig=c(0,1,.7,1),
    bg="transparent",col="black")
plot(X.IncMSE~rundowntime,data=fff[fff$parm=="T",], ylim=c(0,8), xlim=c(-150,0),
     xlab="",xaxt="n",
     ylab="%Importance of soil temperature")
par(mfrow=c(3,1),mar=c(0,4,0,2),cex=1,mgp=c(.75,.18,0), las=1, 
    ps=8,tck=-.01, fig=c(0,1,.4,.7),
    bg="transparent",col="black", new=T)
plot(X.IncMSE~rundowntime,data=fff[fff$parm=="O",], ylim=c(0,8), xlab="",xaxt="n",
     xlim=c(-150,0),ylab="%Importance of soil Oxygen")
par(mfrow=c(3,1),mar=c(2,4,0,2),cex=1,mgp=c(.75,.18,0), las=1, 
    ps=8,tck=-.01, fig=c(0,1,.1,.4),
    bg="transparent",col="black", new=T)
plot(X.IncMSE~rundowntime,data=fff[fff$parm=="M",], ylim=c(0,8), xlim=c(-150,0),
     ylab="%Importance of soil moisture",xlab="Time before GHG measurement (hours)")
# conclusion is that no single time period prior to flux measurement predicts fluxes,
# , but the order of importance indicates soil temp is most important, then soil O2, and least is soil moistu

##### ask mean versus variance for importance of predicting GHG fluxes ######
cdat$meanO2 <- rowMeans(cdat[,700:1035],na.rm=T)
cdat$meantemp <- rowMeans(cdat[,364:699], na.rm=T)
cdat$meanmoist <- rowMeans(cdat[,28:363], na.rm = T)
summary(cdat[,1034:1038])
cdat$VarO2 <- rowVars(o2dd, na.rm = T)
cdat$Vartemp <- rowVars(tempdd, na.rm = T)
cdat$Varmoist <- rowVars(moistdd, na.rm = T)
cdat$sdO2 <- rowSds(o2dd, na.rm=T)
cdat$sdtemp <- rowSds(tempdd, na.rm=T)
cdat$sdmoist <- rowSds(moistdd, na.rm=T)

#
saveRDS(cdat, 
        file="c:/users/terry/dropbox/5R USDA project/data processing/2012-2014 ghg w prior week sensors data.rds")
rm(list=ls(all=TRUE))
cdat <- readRDS(file="d:/dropbox/5R USDA project/data processing/2012-2014 ghg w prior week sensors data.rds")
# add in wfps
wfps <- (1-(cdat$ps-cdat[,28:363])/cdat$ps)*100
wfpsnames <- paste("wfps",names(wfps),sep="_")
cdat2 <- cbind(cdat,wfps)#### wfps starts at 1045 - 1380
colnames(cdat2) <- c(names(cdat),wfpsnames)
satd80 <- subset(cdat2,wfps_M_167.5>=80) ### cases where wfps excesses 95% at time of flux
 # explore relation when and saturated
satd90 <- subset(cdat2,wfps_M_167.5>=90) ### cases where wfps excesses 95% at time of flux
satd95 <- subset(cdat2,wfps_M_167.5>=95) ### cases where wfps excesses 95% at time of flux



r2.corr.mer <- function(m) {
  lmfit <-  lm(model.response(model.frame(m)) ~ fitted(m))
  summary(lmfit)$r.squared
} 

ggfitmm80 <- lmer(log(.3+N2Orate)~O_167.5 + (1|chamber), data=satd80)
ggfitmm90 <- lmer(log(.3+N2Orate)~O_167.5 + (1|chamber), data=satd90)
ggfitmm95 <- lmer(log(.3+N2Orate)~O_167.5 + (1|chamber), data=satd95)

fit1 <- lmer(log(.35+N2Orate)~O_167.5 + wfps_M_167.5+ (1|chamber), data=cdat2)
r2.corr.mer(fit1)
cdat2$gr <- ifelse(cdat2$wfps_M_167.5<75,"dry",
                   ifelse(cdat2$wfps_M_167.5>=75&cdat2$wfps_M_167.5<93,"med",
                          ifelse(cdat2$wfps_M_167.5>=93,"sat",NA)))

cdat2$grO2 <- ifelse(cdat2$O_167.5<5,"anox",
                   ifelse(cdat2$O_167.5>=5&cdat2$O_167.5<10,"low",
                          ifelse(cdat2$O_167.5>=10&cdat2$O_167.5<15,"mid",
                          ifelse(cdat2$O_167.5>=15,"ox",NA))))
cdat3 <- cdat2[cdat2$chamber!="S1J1",]
cdat3$Cdate <- as.numeric(cdat3$CollectionDate-min(cdat3$CollectionDate))/86400
cdat3 <- cdat3[!is.na(cdat3$wfps_M_167.5)&!is.na(cdat3$O_167.5),]
cdat3 <- cdat3[cdat3$Transect!="T4",]

cdat3$N2O1000 <- cdat3$N2Orate*1000 
saveRDS(cdat3, file="c:/users/terry/dropbox/5r usda project/posters and presentations/dataset used for AGU 2015 figures 7 and 8.rds")

windows(20,20,record=T)
par(mfrow=c(4,5), mar=c(1,1,1,1))
for(i in unique(cdat3$chamber)) hist(cdat3$wfps_M_167.5[cdat3$chamber==i], main=i)


library(lme4)
obywfps1 <- lmer(log(N2Orate +.3) ~ O_167.5 + gr + (Cdate|chamber), data=cdat3)
obywfps2 <- lmer(log(N2Orate +.3) ~ O_167.5 * gr + (Cdate|chamber), data=cdat3)
##### candidate bivariate plot  ######
r2.corr.mer(obywfps2)
par(mfrow=c(1,1), mar=c(4,5.5,2,1), ps=20)
plot(log(N2Orate +.3) ~ O_167.5, data=cdat3[cdat3$gr=="dry",], 
     col="red", ylim=c(-2,2),
     ylab = expression(paste("N"[2],"O flux (log mgN m"^"-2", "d"^"-1",")")),
     xlab=expression(paste("Soil O"[2]," (%)")))
points(log(N2Orate +.3) ~ O_167.5, data=cdat3[cdat3$gr=="med",], col="green")
points(log(N2Orate +.3) ~ O_167.5, data=cdat3[cdat3$gr=="sat",], col="blue")
abline(a=fixef(obywfps2)[1],b=fixef(obywfps2)[2], col="red")
abline(a=fixef(obywfps2)[1]-fixef(obywfps2)[3],b=fixef(obywfps2)[2]-fixef(obywfps2)[5], col="green")
abline(a=fixef(obywfps2)[1]-fixef(obywfps2)[4],b=fixef(obywfps2)[2]-fixef(obywfps2)[6], col="blue")
text(3,1.8,expression(paste("R"^2," = 0.14")))
legend("topright", c("dry","moist ","saturated"),
       col=c("red","green","blue"),fill=c("red","green","blue")
       ,ncol=3, bty="n")


## boxplot variation blows up under oxic conditions and soil moisture affects N2O only under oxic conditions
cdat3$grint <- interaction(cdat3$gr,cdat3$grO2)
b <- boxplot(N2Orate ~ grint, data=cdat3, plot=0)
par(mfrow=c(1,1), mar=c(5,5,2,1), ps=14)
boxplot(log(N2Orate + .3)~grint, data=cdat3,outline=F,varwidth=T,
        pars = list(boxwex = 0.5, staplewex = 0.5, outwex = 0.5),
        names=rep(c("dry","moist","sat"),4),
        col=rep(c("brown","green","blue"),4),
        ylab = expression(paste("N"[2],"O flux (log mgN m"^"-2", "d"^"-1",")")))
text(1:length(b$n), b$stats[5,]-1, paste("n=", b$n))
mtext(at=c(2,5,8,11), text=c("anoxic","low","medium","oxic"), 
      side=1, line=3)
mtext(at=0, text="Soil O2",side=1, line=3)
mtext(at=0, text="Soil Moisture",side=1, line=1)

#### boxplot reverse of last #####
cdat3$grint2 <- interaction(cdat3$grO2,cdat3$gr)
windows(7.5,4, record=T)
b <- boxplot(N2Orate ~ grint2, data=cdat3, plot=0)
par(mfrow=c(1,1), mar=c(5,5.5,2,1), ps=20)
boxplot(log(N2Orate + .3)~grint2, data=cdat3,outline=F,varwidth=F,
        pars = list(boxwex = 0.5, staplewex = 0.5, outwex = 0.5),
  #      names=rep(c("anoxic","low","medium","oxic"),3),
        names=F,ylim=c(-1.6,-.3),
        col=rep(c("red","yellow","green","blue"),3),
        ylab = expression(paste("N"[2],"O flux (ln mgN m"^"-2", "d"^"-1",")")))
#text(1:length(b$n), b$stats[5,]-1, paste("n=", b$n))
legend("topright", c("0-5","5-10","10-15",">15"),
       col=c("red","yellow","green","blue"),fill=c("red","yellow","green","blue")
       ,ncol=4, bty="n")
text(1.5,-.35,expression(paste("% Soil O" [2])))
mtext(at=c(2.5,6.5,10.5), text=c("------dry------",
                                 "-----moist-----",
                                 "---saturated---"), 
      side=1, line=1)
mtext(at=6.5, text="Soil moisture (~wfps)",side=1, line=3)
#mtext(at=0, text="Soil O2",side=1, line=1)


cdatlow <- subset(cdat3,wfps_M_167.5<80) ### cases where wfps excesses 95% at time of flux
cdat80 <- subset(cdat3,wfps_M_167.5>=80 & wfps_M_167.5<90) ### cases where wfps excesses 95% at time of flux
# explore relation when and saturated
cdat90 <- subset(cdat3,wfps_M_167.5>=90 & wfps_M_167.5<95) ### cases where wfps excesses 95% at time of flux
cdat95 <- subset(cdat3,wfps_M_167.5>=95) ### cases where wfps excesses 95% at time of flux

plot(log(.3+N2Orate)~O_167.5,data=cdat3)
abline(lm(log(.3+N2Orate)~O_167.5,data=cdat3))
abline(lm(log(.3+N2Orate)~O_167.5,data=cdatlow), col="green")
abline(lm(log(.3+N2Orate)~O_167.5,data=cdat80), col="yellow")
abline(lm(log(.3+N2Orate)~O_167.5,data=cdat90), col="orange")
abline(lm(log(.3+N2Orate)~O_167.5,data=cdat95), col="red")

plot(log(N2O1000)~O_167.5,data=cdat3)
abline(lm(log(N2O1000)~O_167.5,data=cdat3))
abline(lm(log(N2O1000)~O_167.5,data=cdatlow), col="green")
abline(lm(log(N2O1000)~O_167.5,data=cdat80), col="yellow")
abline(lm(log(N2O1000)~O_167.5,data=cdat90), col="orange")
abline(lm(log(N2O1000)~O_167.5,data=cdat95), col="red")

plot(log(N2O1000)~wfps_M_167.5,data=cdat3)

library(Rcmdr)
scatter3d(cdat3$O_167.5,cdat3$wfps_M_167.5,log(cdat3$N2Orate))
plot(sqrt(.3+N2Orate)~O_167.5,data=cdat3, ylim=c(0,2))
abline(lm(sqrt(.3+N2Orate)~O_167.5,data=cdat3))
abline(lm(sqrt(.3+N2Orate)~O_167.5,data=cdatlow), col="green")
abline(lm(sqrt(.3+N2Orate)~O_167.5,data=cdat80), col="yellow")
abline(lm(sqrt(.3+N2Orate)~O_167.5,data=cdat90), col="orange")
abline(lm(sqrt(.3+N2Orate)~O_167.5,data=cdat95), col="red")

fit2 <- lmer(log(.35+N2Orate)~O_167.5 + wfps_M_167.5+ (1|chamber), data=cdat3)
r2.corr.mer(fit2)
fit3 <- lmer(log(.35+N2Orate)~ O_167.5  + (1|chamber), data=cdat3)
fit4 <- lmer(log(.35+N2Orate)~wfps_M_167.5 + (1|chamber), data=cdat3)
fit5 <- lmer(log(.35+N2Orate)~wfps_M_167.5 + (Cdate|chamber), data=cdat3)
fit6 <- lmer(log(.35+N2Orate)~O_167.5 + wfps_M_167.5+ (Cdate|chamber), data=cdat3)
fit7 <- lmer(log(.35+N2Orate)~O_167.5 + (Cdate|chamber), data=cdat3)
fit8 <- lmer(log(.35+N2Orate)~wfps_M_167.5 + sdO2 + (Cdate|chamber), data=cdat3)
fit9 <- lmer(log(.35+N2Orate)~O_167.5 + sdO2 + (Cdate|chamber), data=cdat3)
fit10 <- lmer(log(N2Orate)~O_167.5 + sdO2 + (Cdate|chamber), data=cdat3)

AIC(fit3,fit4, fit5, fit6, fit7, fit8, fit9, fit10)
r2.corr.mer(fit3)
r2.corr.mer(fit4)

windows(20,20,record=T)
par(mfrow=c(5,5), mar=c(1,1,1,1))
for(i in 1:length(unique(cdat3$chamber))){
plot(N2Orate~sdO2, data=cdat3[cdat3$chamber==unique(cdat3$chamber)[i],])
}

windows(20,20,record=T)
par(mfrow=c(5,5), mar=c(1,1,1,1))
for(i in 1:length(unique(cdat3$chamber))){
  plot(N2Orate~O_167.5, data=cdat3[cdat3$chamber==unique(cdat3$chamber)[i],])
}

par(mfrow=c(5,5), mar=c(1,1,1,1))
for(i in 1:length(unique(cdat3$chamber))){
  plot(log(N2Orate)~O_167.5, data=cdat3[cdat3$chamber==unique(cdat3$chamber)[i],])
}


par(mfrow=c(5,5), mar=c(1,1,1,1))
for(i in 1:length(unique(cdat3$chamber))){
  plot(log(N2Orate)~O_167.5, data=cdat3[cdat3$chamber==unique(cdat3$chamber)[i],])
}

par(mfrow=c(5,5), mar=c(1,1,1,1))
for(i in 1:length(unique(cdat3$chamber))){
  plot(log(N2Orate)~O_167.5, data=cdat95[cdat95$chamber==unique(cdat95$chamber)[i],])
}



r2.corr.mer(ggfitmm95)
plot(ggfitmm)
ggfit <- lm(log(.3+N2Orate)~O_167.5, data=satd)
plot(log(.3+N2Orate)~O_167.5, data=satd)
abline(ggfit, col="blue")
abline(fixef(ggfitmm), col="red")
plot(O_167.5~N2Orate, data=satd)
plot(log(.3+N2Orate)~O_167.5, data=satd)
ggfit <- lm(log(.3+N2Orate)~O_167.5, data=satd)
abline(ggfit)
# explore relationships
fitch4v <- lm(CH4rate~Vartemp,data=cdat)
fitch4m <- lm(CH4rate~meantemp,data=cdat)
fitch4s <- lm(CH4rate~sdtemp,data=cdat)
summary(fitch4m)
summary(fitch4v) ## much better model????? may be higher leveraged
summary(fitch4s)
plot(CH4rate~Vartemp,data=cdat)
plot(CH4rate~sdtemp,data=cdat)
plot(fitch4v)
plot(fitch4m)
AIC(fitch4v, fitch4m)
anova(fitch4v, fitch4m)

fitn2ov <- lm(N2Orate~Vartemp,data=cdat)
fitn2om <- lm(N2Orate~meantemp,data=cdat)
summary(fitn2om)## much better model- makes sense higher temp - higher N2O rate
summary(fitn2ov)
plot(fitn2ov)
plot(fitn2om)
AIC(fitn2ov, fitn2om)
anova(fitn2ov, fitn2om)

#### moist 
fitch4mv <- lm(CH4rate~Varmoist,data=cdat)
fitch4mm <- lm(CH4rate~meanmoist,data=cdat)
fitch4ms <- lm(CH4rate~sdmoist,data=cdat)
summary(fitch4mm)
summary(fitch4mv) ## 
summary(fitch4ms)
plot(CH4rate~Vartemp,data=cdat)
plot(CH4rate~sdtemp,data=cdat)
plot(fitch4v)
plot(fitch4m)
AIC(fitch4v, fitch4m)
anova(fitch4v, fitch4m)

# logged N2O flux
fitnmm <- lmer(log(N2Orate+.37)~meanmoist+(1|chamber), data=cdat)
fitnsm <- lmer(log(N2Orate+.37)~sdmoist+(1|chamber), data=cdat)
summary(fitnmm); summary(fitnsm)
AIC(fitnmm,fitnsm)

r2.corr.mer <- function(m) {
  lmfit <-  lm(model.response(model.frame(m)) ~ fitted(m))
  summary(lmfit)$r.squared
} # http://stats.stackexchange.com/questions/95054/how-to-get-the-overall-effect-for-linear-mixed-model-in-lme4-in-r

fitnso2 <- lmer(log(N2Orate+.37)~sdo2+(1|chamber), data=cdat)
